[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
[user]
  name = Jacob LeGrone
  email = git@jacoblegrone.com
[core]
  excludesfile = ~/Development/dev-tools/settings/git/gitignore
[diff]
  tool = meld
  guitool = meld
[merge]
  tool = meld
  guitool = meld
[push]
  default = simple
[alias]
  # one-line log
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  # log directory (defaults to current directory)
  l-cd = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short -- ./ --
  log-cd = log -- ./ --

  aliases = "!git config -l | grep alias | cut -c 7-"
  contains = branch -a --contains
  up = pull --rebase --autostash origin develop
  s = status -s
  co = checkout
  cb = checkout -b
  rb = rebase
  start = "!sh -c \"git checkout develop && git up && git cb feature/$1\" -"
  hotfix = "!sh -c \"git checkout master && git up && git cb hotfix/$1\" -"

  ac = !git add . && git commit -am
  wip = !git ac "WIP"
  undo = reset --soft HEAD~1
  amend = !git add . && git commit --amend --no-edit
  rename = !git branch -m

  # Get the current branch name (not so useful in itself, but used in
  # other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"
  # Push the current branch to the remote "origin", and set it to track
  # the upstream branch
  publish = "!git push -u origin $(git branch-name)"
  # Delete the remote version of the current branch
  unpublish = "!git push origin :$(git branch-name)"
  # Delete merged branches
  cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"
